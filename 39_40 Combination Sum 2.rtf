{\rtf1\ansi\ansicpg936\cocoartf1504\cocoasubrtf820
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;\red255\green255\blue51;}
{\*\expandedcolortbl;;\csgenericrgb\c100000\c100000\c20000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww38200\viewh21600\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /*\
Given a collection of candidate numbers (C) and a target number (T), find all unique combinations in C where the candidate numbers sums to T.\
\
Each number in C may only be used once in the combination.\
\
Note:\
All numbers (including target) will be positive integers.\
The solution set must not contain duplicate combinations.\
For example, given candidate set [10, 1, 2, 7, 6, 1, 5] and target 8, \
A solution set is: \
[\
  [1, 7],\
  [1, 2, 5],\
  [2, 6],\
  [1, 1, 6]\
]\
\
\
\

\f1 \'cc\'e2\'c4\'bf\'a3\'ba\'c4\'d1\'b5\'e3\'d4\'da\'d3\'da\'d4\'f5\'c3\'b4\'c8\'a5\'d6\'d8
\f0 \
\

\f1 \'b7\'bd\'b7\'a8\'a3\'ba\
backtracking\
\'b5\'dd\'b9\'e9
\f0 +DFS\
\
*/\
class Solution \{\
public:\
    void combine(vector<vector<int>> &result, vector<int>& candi, vector<int> path, int pose, int base, int target)\
    \{\
        if(base==target)\
        \{\
            result.push_back(path);\
            return;\
        \}\
        else if(base>target)\
            return;\
        else\
        \{\
            for(int i=pose;i<candi.size();i++)\
            \{\
               \cb2  if(candi[i]==candi[i-1] && i-1>=pose)  //i-1>=pose
\f1 \'ca\'c7\'d2\'bb\'b8\'f6\'b9\'d8\'bc\'fc\'b5\'e3\'a3\'a1
\f0 \
                   continue;\cb1 \
                \
                path.push_back(candi[i]);\
                combine(result,candi,path,i+1,base+candi[i],target);\
                path.pop_back();\
            \}\
        \}\
    \}\
    \
    vector<vector<int>> combinationSum2(vector<int>& candi, int target) \
    \{\
       sort(candi.begin(),candi.end());\
       vector<vector<int>> result;    \
       vector<int> path;    \
       combine(result,candi,path,0,0,target);       \
       return result; \
    \}\
\};}