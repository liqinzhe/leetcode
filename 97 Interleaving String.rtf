{\rtf1\ansi\ansicpg936\cocoartf1504\cocoasubrtf820
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww17780\viewh14440\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /*\
Given s1, s2, s3, find whether s3 is formed by the interleaving of s1 and s2.\
\
For example,\
Given:\
s1 = "aabcc",\
s2 = "dbbca",\
\
When s3 = "aadbbcbcac", return true.\
When s3 = "aadbbbaccc", return false.\
\

\f1 \'b6\'af\'cc\'ac\'b9\'e6\'bb\'ae\'b5\'c4\'cb\'bc\'cf\'eb
\f0 \
//result[i][j]
\f1 \'b4\'e6\'b5\'c4\'ca\'c7
\f0 s1
\f1 \'c7\'b0
\f0 j
\f1 \'ce\'bb\'ba\'cd
\f0 s2
\f1 \'c7\'b0
\f0 i
\f1 \'ce\'bb\'c4\'dc\'b2\'bb\'c4\'dc\'ba\'cf\'c0\'ed\'d7\'e9\'d7\'b0\'b3\'c9s3\'c7\'b0i+j\'ce\'bb
\f0 \
\
if(s2[i-1]==s3[i+j-1] && result[i-1][j]==1)\
                        result[i][j]=1;\
if(s1[j-1]==s3[i+j-1] && result[i][j-1]==1)\
                        result[i][j]=1;\
\
*/\
class Solution \{\
public:\
\
    bool isInterleave(string s1, string s2, string s3) \
    \{\
        int size1=s1.size();\
        int size2=s2.size();\
        if(size1+size2!=s3.size())\
            return false;\
        if(size1==0)\
        \{\
            if(s2==s3)\
               return true;\
            else\
               return false;\
        \}\
        else if(size2==0)\
        \{\
           if(s1==s3)\
               return true;\
            else\
               return false; \
        \}\
        \
        vector<int> m1(size1+1,0);\
        vector<vector<int>> result(size2+1,m1);\
        result[0][0]=1;\
        \
	//result[i][j]
\f1 \'b4\'e6\'b5\'c4\'ca\'c7
\f0 s1
\f1 \'c7\'b0
\f0 j
\f1 \'ce\'bb\'ba\'cd
\f0 s2
\f1 \'c7\'b0
\f0 i
\f1 \'ce\'bb\'c4\'dc\'b2\'bb\'c4\'dc\'ba\'cf\'c0\'ed\'d7\'e9\'d7\'b0\'b3\'c9s3\'c7\'b0i+j\'ce\'bb
\f0 	\
\
        for(int j=1;j<=size1;j++)\
        \{\
            if(s1[j-1]==s3[j-1])\
                result[0][j]=1;\
            else \
                break;\
        \}\
        \
        for(int i=1;i<=size2;i++)\
        \{\
            for(int j=0;j<=size1;j++)\
            \{\
                if(j==0)\
                \{\
                    if(s2[i-1]==s3[i-1] && result[i-1][0]==1)    \
                        result[i][j]=1;\
                \}\
                else\
                \{\
                    if(s2[i-1]==s3[i+j-1] && result[i-1][j]==1)\
                        result[i][j]=1;\
                    if(s1[j-1]==s3[i+j-1] && result[i][j-1]==1)\
                        result[i][j]=1;\
                \}\
            \}\
        \}\
        if(result[size2][size1]==1)\
            return true;\
        \
        return false;\
    \}\
\};}