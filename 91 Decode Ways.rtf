{\rtf1\ansi\ansicpg936\cocoartf1504\cocoasubrtf820
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww21720\viewh18080\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /*\
A message containing letters from A-Z is being encoded to numbers using the following mapping:\
\
'A' -> 1\
'B' -> 2\
...\
'Z' -> 26\
Given an encoded message containing digits, determine the total number of ways to decode it.\
\
For example,\
Given encoded message "12", it could be decoded as "AB" (1 2) or "L" (12).\
\
The number of ways decoding "12" is 2.\
\

\f1 \'b1\'ea\'d7\'bc\'b6\'af\'cc\'ac\'b9\'e6\'bb\'ae\'a3\'ac\'ba\'f3\'c3\'e6\'d3\'eb\'c7\'b0\'c3\'e6\'d3\'d0\'b9\'d8
\f0 \
\
*/\
class Solution \{\
public:\
    int numDecodings(string s) \
    \{\
        if(s.size()==0 || s[0]=='0')\
            return 0;\
        \
        vector<int> ret(s.size()+1,1);\
        for(int i=1;i<s.size();i++)\
        \{\
            if(s[i]=='0')\
            \{\
                if(s[i-1]!='1' && s[i-1]!='2')\
                    return 0;\
                else\
                    ret[i+1]=ret[i-1];    \
            \}\
            else if(s[i]>='1' && s[i]<='6')\
            \{\
                if(s[i-1]=='1' || s[i-1]=='2')\
                    ret[i+1]=ret[i]+ret[i-1];\
                else\
                    ret[i+1]=ret[i];\
            \}\
            else\
            \{\
                if(s[i-1]=='1')\
                    ret[i+1]=ret[i]+ret[i-1];\
                else\
                    ret[i+1]=ret[i];\
            \}\
        \}\
        return ret[s.size()]; \
    \}\
\};}