{\rtf1\ansi\ansicpg936\cocoartf1504\cocoasubrtf820
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww15180\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /*\
Given two words word1 and word2, find the minimum number of steps required to convert word1 to word2. (each operation is counted as 1 step.)\
\
You have the following 3 operations permitted on a word:\
\
a) Insert a character\
b) Delete a character\
c) Replace a character\
\

\f1 \'b1\'ea\'d7\'bc\'b6\'af\'cc\'ac\'b9\'e6\'bb\'ae\'a3\'ac\'d7\'aa\'d2\'c6\'d7\'b4\'cc\'ac\'ca\'c7
\f0 w1
\f1 \'b5\'c4\'c7\'b0
\f0 j
\f1 \'b8\'f6\'d7\'d6\'b7\'fb\'b5\'bdw2\'b5\'c4\'c7\'b0i\'b8\'f6\'d7\'d6\'b7\'fb \'ca\'c7 ret[i-1][j] ret[i][j-1] ret[i][j] \'d3\'d0\'b9\'d8
\f0 \
 \
*/\
class Solution \{\
public:\
    int minDistance(string w1, string w2) \
    \{\
        vector<int> m1(w2.size()+1,0);\
        vector<vector<int>> result(w1.size()+1,m1);\
       \
        for(int i=0;i<=w1.size();i++)\{\
            for(int j=0;j<=w2.size();j++)\{\
                if(i==0)\
                    result[i][j]=j; \
                else if(j==0)\
                    result[i][j]=i;\
                else\{\
                    if(w1[i-1]==w2[j-1]) \
                        result[i][j]=min( min(result[i-1][j]+1,result[i][j-1]+1), result[i-1][j-1]); \
                    else\
                        result[i][j]=min( min(result[i-1][j]+1,result[i][j-1]+1), result[i-1][j-1]+1);\
                \}\
            \}\
        \}\
        return result[w1.size()][w2.size()];\
    \}  \
\};}