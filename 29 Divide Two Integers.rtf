{\rtf1\ansi\ansicpg936\cocoartf1504\cocoasubrtf820
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /*\
Divide two integers without using multiplication, division and mod operator.\
\
If it is overflow, return MAX_INT.\
\
*/\
class Solution \{\
public:\
    int divide(int dividend, int divisor) \
    \{\
        long k=0;\
        long a=dividend;\
        long b=divisor;\
        long sum2000=0;\
        for(int i=0;i<20000;i++)\
        \{\
            sum2000+=b;\
        \}\
       \
        if((dividend<0 && divisor>0) || (dividend>0 && divisor<0))\
        \{\
         \
            while(abs(a)>=abs(sum2000))\
            \{\
                a+=sum2000;\
                k-=20000;\
            \}         \
         \
            while(abs(a)>=abs(b))\
            \{\
                a=a+b;\
                k--;\
            \}\
        \}\
        else\
        \{ \
            while(abs(a)>=abs(sum2000))\
            \{\
                a-=sum2000;\
                k+=20000;\
                if(k==INT_MAX)\
                    break;\
            \}\
            \
            while(abs(a)>=abs(b))\
            \{\
                a=a-b;\
                k++;\
                if(k==INT_MAX)\
                    break;\
            \} \
        \}\
        return k;\
    \}\
\};}