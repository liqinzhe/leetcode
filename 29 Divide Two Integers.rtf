{\rtf1\ansi\ansicpg936\cocoartf1504\cocoasubrtf820
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /*\
Divide two integers without using multiplication, division and mod operator.\
\
If it is overflow, return MAX_INT.\
\
way-1:\
\
way-2:\
\

\f1 \'cc\'e2\'c4\'bf\'b5\'c4\'d2\'e2\'cb\'bc\'ca\'c7\'c1\'bd\'ca\'fd\'b3\'fd\'b7\'a8\'a3\'ac\'b5\'ab\'b2\'bb\'ca\'b9\'d3\'c3\'b3\'cb\'b7\'a8\'a3\'ac\'b3\'fd\'b7\'a8\'a3\'ac\'c8\'a1\'c4\'a3\'b5\'c8\'d4\'cb\'cb\'e3\'b7\'fb\'c0\'b4\'d7\'f6\'a1\'a3
\f0 \

\f1 \'bb\'d8\'cf\'eb\'b3\'fd\'b7\'a8\'b5\'c4\'d7\'ee\'c6\'d3\'cb\'d8\'cb\'bc\'cf\'eb\'a3\'ba
\f0 \

\f1 \'bc\'b4\'a3\'ac\'b5\'b1
\f0    
\f1 \'b1\'bb\'b3\'fd\'ca\'fd
\f0 >
\f1 \'b3\'fd\'ca\'fd
\f0   
\f1 \'d2\'bb\'d6\'b1\'c4\'c3\'b1\'bb\'b3\'fd\'ca\'fd\'bc\'f5\'c8\'a5\'b3\'fd\'ca\'fd\'a3\'ac\'c4\'dc\'bc\'f5\'c8\'a5\'b3\'fd\'ca\'fd\'b5\'c4\'b4\'ce\'ca\'fd\'ce\'aa\'c1\'bd\'ca\'fd\'cf\'e0\'b3\'fd\'b5\'c4\'bd\'e1\'b9\'fb\'a1\'a3
\f0 \

\f1 \'b8\'f9\'be\'dd\'d5\'e2\'b8\'f6\'cb\'bc\'cf\'eb\'a3\'ac\'ce\'d2\'c3\'c7\'ba\'dc\'c8\'dd\'d2\'d7\'d0\'b4\'b3\'f6\'ce\'b1\'b4\'fa\'c2\'eb\'a3\'ba
\f0 \
while(
\f1 \'b1\'bb\'b3\'fd\'ca\'fd
\f0 >
\f1 \'b3\'fd\'ca\'fd
\f0 )\

\f1 \'b1\'bb\'b3\'fd\'ca\'fd
\f0   -=  
\f1 \'b3\'fd\'ca\'fd
\f0 \
count ++\

\f1 \'d7\'ee\'d6\'d5\'b5\'c4
\f0 count
\f1 \'ce\'aa\'ce\'d2\'c3\'c7\'cb\'f9\'d2\'aa\'b5\'c4\'bd\'e1\'b9\'fb\'a1\'a3
\f0 \

\f1 \'b5\'ab\'ca\'c7\'a3\'ac\'ce\'d2\'c3\'c7\'bf\'bc\'c2\'c7\'d7\'ee\'bb\'b5\'c7\'e9\'bf\'f6\'a3\'ba\'b5\'b1\'b1\'bb\'b3\'fd\'ca\'fd\'ca\'c7
\f0 INT_MAX
\f1 \'a3\'ac\'b3\'fd\'ca\'fd\'ca\'c7
\f0 1
\f1 \'a3\'ac\'c4\'c7\'c3\'b4\'b8\'d5\'b8\'d5\'b5\'c4\'b4\'fa\'c2\'eb\'be\'cd\'d2\'aa\'d7\'f6\'a3\'a8
\f0 2^31-1
\f1 \'a3\'a9\'b4\'ce\'a3\'ac\'bc\'b4
\f0 2147483647
\f1 \'b4\'ce\'bc\'f5\'b7\'a8\'a3\'ac\'bd\'e1\'b9\'fb\'ca\'c7\'b3\'ac\'ca\'b1
\f0 .\
\
\

\f1 \'c4\'c7\'c3\'b4\'d3\'d0\'d2\'bb\'b8\'f6\'d7\'f6\'b7\'a8\'be\'cd\'ca\'c7\'cd\'a8\'b9\'fd\'d7\'f3\'d2\'c6\'b2\'d9\'d7\'f7\'bc\'f5\'c9\'d9\'bc\'f5\'b7\'a8\'b5\'c4\'b4\'ce\'ca\'fd\'a3\'ac\'b5\'ab\'ca\'c2\'ca\'b5\'c9\'cf\'d1\'ad\'bb\'b7\'b5\'c4\'b4\'ce\'ca\'fd\'b2\'a2\'c3\'bb\'d3\'d0\'bc\'f5\'c9\'d9\'a1\'a3
\f0 \

\f1 \'d7\'f3\'d2\'c6\'b2\'d9\'d7\'f7\'d2\'bb\'b4\'ce\'cf\'e0\'b5\'b1\'d3\'da\'b3\'cb\'d2\'d4
\f0 2
\f1 \'a3\'ac\'c4\'c7\'c3\'b4\'d7\'f3\'d2\'c6
\f0 N
\f1 \'b4\'ce\'be\'cd\'cf\'e0\'b5\'b1\'d3\'da\'b3\'cb\'d2\'d4
\f0 2^N
\f1 \'a1\'a3
\f0 \

\f1 \'d4\'da\'d5\'e2\'b5\'c0\'cc\'e2\'c9\'cf\'a3\'ac\'ce\'d2\'c3\'c7\'c3\'bf\'b4\'ce\'bc\'f5\'c8\'a5
\f0 2^(N) * 
\f1 \'b3\'fd\'ca\'fd\'a3\'ac\'d4\'d9\'bd\'ab\'c9\'cf\'ca\'f6
\f0 count 
\f1 \'c3\'bf\'b4\'ce\'bc\'d3\'c9\'cf
\f0  1<<2^N
\f1 \'b4\'ce\'b7\'bd\'a3\'ac\'be\'cd\'c4\'dc\'b4\'f3\'b4\'f3\'cb\'f5\'bc\'f5\'d7\'f6\'bc\'f5\'b7\'a8\'b5\'c4\'b4\'ce\'ca\'fd\'a1\'a3
\f0 \

\f1 \'d7\'f3\'d2\'c6\'b2\'d9\'d7\'f7\'d2\'b2\'bd\'e2\'be\'f6\'c1\'cb\'cc\'e2\'c4\'bf\'d2\'aa\'c7\'f3\'b2\'bb\'c4\'dc\'ca\'b9\'d3\'c3\'b3\'cb\'b7\'a8\'b5\'c4\'cf\'de\'d6\'c6\'a1\'a3
\f0 \

\f1 \'d5\'e2\'b8\'f6
\f0 N
\f1 \'be\'cd\'bf\'c9\'d2\'d4\'cd\'a8\'b9\'fd\'c4\'da\'d1\'ad\'bb\'b7\'d7\'f3\'d2\'c6\'b1\'c8\'bd\'cf\'c0\'b4\'c5\'d0\'b6\'cf\'a1\'a3
\f0 \
\
*/\
class Solution \{\
public:\
    int divide(int dividend, int divisor) \
    \{\
        //way-1\
        /*\
        long k=0;\
        long a=dividend;\
        long b=divisor;\
        long sum2000=0;\
        for(int i=0;i<20000;i++)\
        \{\
            sum2000+=b;\
        \}\
       \
        if((dividend<0 && divisor>0) || (dividend>0 && divisor<0))\
        \{\
         \
            while(abs(a)>=abs(sum2000))\
            \{\
                a+=sum2000;\
                k-=20000;\
            \}         \
         \
            while(abs(a)>=abs(b))\
            \{\
                a=a+b;\
                k--;\
            \}\
        \}\
        else\
        \{ \
            while(abs(a)>=abs(sum2000))\
            \{\
                a-=sum2000;\
                k+=20000;\
                if(k==INT_MAX)\
                    break;\
            \}\
            \
            while(abs(a)>=abs(b))\
            \{\
                a=a-b;\
                k++;\
                if(k==INT_MAX)\
                    break;\
            \} \
        \}\
        return k;\
        */\
        \
        //way-2\
        //
\f1 \'bc\'c7\'c2\'bc\'bd\'e1\'b9\'fb\'b7\'fb\'ba\'c5
\f0   \
        int flag = 1;  \
        if (dividend < 0)  \
            flag =-flag;  \
        if (divisor < 0)  \
            flag =-flag;  \
        //
\f1 \'b6\'d4\'b1\'bb\'b3\'fd\'ca\'fd\'ba\'cd\'b3\'fd\'ca\'fd\'b7\'d6\'b1\'f0\'c8\'a1\'be\'f8\'b6\'d4\'d6\'b5\'bc\'c6\'cb\'e3\'a3\'ac\'b2\'a2\'b1\'a3\'b4\'e6\'d4\'da
\f0 long long
\f1 \'b1\'e4\'c1\'bf\'d6\'d0\'d2\'d4\'b7\'c0\'d6\'b9\'d2\'e7\'b3\'f6
\f0   \
        long long num1 = abs((long long)dividend);  \
        long long num2 = abs((long long)divisor);  \
        //
\f1 \'c1\'bd\'d6\'d6\'cc\'d8\'ca\'e2\'c7\'e9\'bf\'f6
\f0   \
        if (num1 < num2)  \
            return 0;  \
        if (divisor == 0)  \
            return INT_MAX;  \
        long long  result = 0;//
\f1 \'bd\'e1\'b9\'fb\'b1\'a3\'b4\'e6\'d4\'da
\f0 long long
\f1 \'d6\'d0\'c0\'b4\'b4\'a6\'c0\'ed
\f0  INT_MAX
\f1 \'ba\'cd
\f0 INT_MIN  \
        while (num1 >= num2)  \
        \{  \
            long long temp = num2;  \
            int count = 0;  \
            while (temp <= num1)  \
            \{  \
                temp = temp << 1;  \
                count++;  \
            \}  \
            result = result + ((long long)1 << (count - 1));//
\f1 \'b4\'cb\'b4\'a6\'b5\'c4
\f0 1
\f1 \'d0\'e8\'d2\'aa\'c7\'bf\'d6\'c6\'d7\'aa\'bb\'bb\'ce\'aa
\f0 long long
\f1 \'a3\'ac\'b7\'f1\'d4\'f2\'c4\'ac\'c8\'cf\'b3\'ac\'b9\'fd
\f0 INT_MAX 
\f1 \'ba\'f3\'d2\'e7\'b3\'f6
\f0   \
            num1 = num1 - (num2 << (count - 1));//
\f1 \'b1\'bb\'b3\'fd\'ca\'fd\'c3\'bf\'b4\'ce\'bc\'f5\'c8\'a5
\f0  2^(count-1)*
\f1 \'b3\'fd\'ca\'fd
\f0   \
        \}  \
        //
\f1 \'b4\'a6\'c0\'ed\'d2\'e7\'b3\'f6\'c7\'e9\'bf\'f6
\f0   \
        if (flag == 1 && result > INT_MAX)  \
            return INT_MAX;  \
        if (flag == -1 && result > INT_MAX)  \
            return INT_MIN;  \
        return result*flag;  \
    \}\
\};}