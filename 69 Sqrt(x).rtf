{\rtf1\ansi\ansicpg936\cocoartf1504\cocoasubrtf820
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww24120\viewh18700\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /*\
Implement int sqrt(int x).\
\
Compute and return the square root of x.\
\
\
*/\
class Solution \{\
public:\
        
\f1 //way-1 \'d2\'b2\'ca\'c7\'b6\'fe\'b7\'d6\'b7\'a8
\f0 \
        int mySqrt(int target) \
    	\{\
        return sqrt_helper(0, min( target, 46340), target);    \
    	\}\
    \
    int sqrt_helper(int start, int end, int target)\
    \{\
        if ( start * start <= target && (start + 1) * (start + 1) > target)\
            return start;\
        if ( end * end <= target)\
            return end;\
        \
        int mid = (start + end) / 2; \
        if ( mid * mid > target)\
            return sqrt_helper(start, mid-1, target);\
        else if ( mid * mid < target )\
            return sqrt_helper(mid, end, target);\
        else\
            return mid;\
    \}\
\
\
        \
        //way-2\
        double begin = 0;  \
        double end = x;  \
        double result = 1;  \
        double mid = 1;  \
        while(abs(result-x) > 0.000001)\
        \{  \
            mid = (begin+end)/2;  \
            result = mid*mid;  \
            if(result > x)   // 
\f1 \'b6\'fe\'b7\'d6\'b5\'c4\'b7\'b6\'ce\'a7
\f0   \
                end = mid;  \
            else \
                begin = mid;  \
        \}  \
        return (int)mid;  \
    \}\
\};}