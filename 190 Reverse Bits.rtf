{\rtf1\ansi\ansicpg936\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /*\
Reverse bits of a given 32 bits unsigned integer.\
\
For example, given input 43261596 (represented in binary as 00000010100101000001111010011100), return 964176192 (represented in binary as 00111001011110000010100101000000).\
\
\
*/\
class Solution \{\
public:\
    uint32_t reverseBits(uint32_t n) \
    \{\
        vector<int> num;\
        while ( n != 0 ) \
        \{\
            num.push_back(n%2);\
            n/=2;\
        \}\
        \
        for(int i = num.size(); i < 32; i++)\
           num.push_back(0);\
        \
        reverse(num.begin(), num.end());\
        \
        uint32_t ret=0;\
        for(int i = 0; i < num.size(); i++)\
        \{   \
            ret += num[i]<<i;\
        \}\
        return ret;  \
    \}\
\};}