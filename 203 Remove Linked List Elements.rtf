{\rtf1\ansi\ansicpg936\cocoartf1504\cocoasubrtf820
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /*\
Remove all elements from a linked list of integers that have value val.\
\
Example\
Given: 1 --> 2 --> 6 --> 3 --> 4 --> 5 --> 6, val = 6\
Return: 1 --> 2 --> 3 --> 4 --> 5\
\
*/\
/**\
 * Definition for singly-linked list.\
 * struct ListNode \{\
 *     int val;\
 *     ListNode *next;\
 *     ListNode(int x) : val(x), next(NULL) \{\}\
 * \};\
 */\
class Solution \{\
public:\
    ListNode* removeElements(ListNode* head, int val) \
    \{\
        if(!head)    \
            return NULL;\
        while(head && head->val==val) \
        \{\
            ListNode*p=head->next;\
            delete head;\
            head=p;\
        \}\
        if(!head)    \
            return NULL;\
       \
       \
        ListNode* last=head;\
        ListNode* p=head->next;\
        while(p)\
        \{\
            if(p->val==val) \
            \{\
                last->next=p->next;\
                ListNode* q=p;\
                delete q;\
                p=last->next;\
            \} \
            else\
            \{\
                p=p->next;\
                last=last->next;\
            \}\
        \}\
        return head;\
    \}\
\};}