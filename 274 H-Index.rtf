{\rtf1\ansi\ansicpg936\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /*\
Given an array of citations (each citation is a non-negative integer) of a researcher, write a function to compute the researcher's h-index.\
\
According to the definition of h-index on Wikipedia: "A scientist has index h if h of his/her \
\
N papers have at least h citations each, and \
the other N \uc0\u8722  h papers have no more than h citations each."  
\f1 \'b9\'d8\'bc\'fc\'d4\'da\'d3\'da\'d5\'e2\'b8\'f6
\f0 no more than
\f1 \'a3\'a1
\f0 \
\
For example, given citations = [3, 0, 6, 1, 5], which means the researcher has 5 papers in total and each of them had received 3, 0, 6, 1, 5 citations respectively. Since the researcher has 3 papers with at least 3 citations each and the remaining two with no more than 3 citations each, his h-index is 3.\
\
Note: If there are several possible values for h, the maximum one is taken as the h-index.\
\
*/\
class Solution \{\
public:\
    int hIndex(vector<int>& citations) \
    \{\
        int n = citations.size();\
        multimap<int,int> mm;\
        for (int i = 0; i < n ;i ++)\
            mm.insert(pair<int,int>(citations[i], 1));\
        \
        int lastvalue = -1;\
        int ret = 0;\
        int i = 0;\
        for (auto it = mm.begin(); it != mm.end(); it++)\
        \{\
            if ((n-i) == it->first)\
                ret = max(ret,it->first);\
            else if ((n-i) < it->first && (n-i) > lastvalue)\
            \{    \
                ret = max(ret, (n-i));\
                return ret;\
            \}\
            else if ((n-i-1) == it->first) //point is that others no more than it->first\
                ret = max(ret, it->first);\
            \
            lastvalue = it->first;    \
            i++;\
        \}\
        \
        return ret\
    \}\
\};}