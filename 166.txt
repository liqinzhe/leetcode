/*Given two integers representing the numerator and denominator of a fraction, return the fraction in string format.If the fractional part is repeating, enclose the repeating part in parentheses.For example,Given numerator = 1, denominator = 2, return "0.5".Given numerator = 2, denominator = 1, return "2".Given numerator = 2, denominator = 3, return "0.(6)".一个除数问题自己写的没有通过，思路和下面这个一样有细节问题注意一：将 int 型 变为long long 来处理注意二：if((num11<0) ^ (num22<0)) 代表有一个为负 巧妙使用异或注意三： to_string() 函数 将整数变为字符串注意四：当每一次都要查找时，一定用map来存*/class Solution {public:    string fractionToDecimal(int num11, int num22)     {       if(num11==0)         return "0";       int sign=1;              if((num11<0) ^ (num22<0))         sign=-1;              long long n=num11;       long long d=num22;       n=abs(n);       d=abs(d);              string ret="";        map<long long,int> m;       bool digit=false;              while(true)       {           if(n<d)           {               if(digit==false)               {                   if(ret=="")                     ret="0.";                   else                     ret+=".";                   digit=true;               }               n*=10;           }                      int r=n-n/d*d;                      if(r==0)           {               ret+=to_string(n/d);               if(sign==-1)                 ret="-"+ret;               return ret;           }           else           {               if(digit==true)               {                   if(m.find(n)==m.end())                   {                      ret+=to_string(n/d);                      m[n]=ret.size()-1;                    }                   else                   {                      int pos=m[n];                       ret = ret.substr(0, pos) + "(" + ret.substr(pos) + ")";                      if(sign == -1)                        ret = "-" + ret;                      return ret;                   }               }               else               {                   ret+=to_string(n/d);               }               n=r;           }       }    }};