{\rtf1\ansi\ansicpg936\cocoartf1504\cocoasubrtf820
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 PingFangSC-Regular;\f2\fswiss\fcharset0 ArialMT;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red243\green235\blue0;
}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c100000\c100000\c100000;\csgenericrgb\c95294\c92157\c0;
}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid1\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid101\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid201\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid3}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}}
\paperw11900\paperh16840\margl1440\margr1440\vieww38200\viewh21600\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /*\
A city's skyline is the outer contour of the silhouette formed by all the buildings in that city when viewed from a distance. Now suppose you are given the locations and height of all the buildings as shown on a cityscape photo (Figure A), write a program to output the skyline formed by these buildings collectively (Figure B).\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Â±èÂπïÂø´ÁÖß 2017-05-17 ‰∏äÂçà10.21.32.png \width10700 \height8460
}¨}\
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Â±èÂπïÂø´ÁÖß 2017-05-17 ‰∏äÂçà10.21.45.png \width10580 \height8420
}¨}\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
The geometric information of each building is represented by a triplet of integers [Li, Ri, Hi], where Li and Ri are the x coordinates of the left and right edge of the ith building, respectively, and Hi is its height. It is guaranteed that 0 \uc0\u8804  Li, Ri \u8804  INT_MAX, 0 < Hi \u8804  INT_MAX, and Ri - Li > 0. You may assume all buildings are perfect rectangles grounded on an absolutely flat surface at height 0.\
\
For instance, the dimensions of all buildings in Figure A are recorded as: [ [2 9 10], [3 7 15], [5 12 12], [15 20 10], [19 24 8] ] .\
\
The output is a list of "key points" (red dots in Figure B) in the format of [ [x1,y1], [x2, y2], [x3, y3], ... ] that uniquely defines a skyline. A key point is the left endpoint of a horizontal line segment. Note that the last key point, where the rightmost building ends, is merely used to mark the termination of the skyline, and always has zero height. Also, the ground in between any two adjacent buildings should be considered part of the skyline contour.\
\
For instance, the skyline in Figure B should be represented as:[ [2 10], [3 15], [7 12], [12 0], [15 10], [20 8], [24, 0] ].\
\
Notes:\
\
The number of buildings in any input list is guaranteed to be in the range [0, 10000].\
The input list is already sorted in ascending order by the left x position Li.\
The output list must be sorted by the x position.\
There must be no consecutive horizontal lines of equal height in the output skyline. For instance, [...[2 3], [4 5], [7 5], [11 5], [12 7]...] is not acceptable; the three lines of height 5 should be merged into one in the final output as such: [...[2 3], [4 5], [12 7], ...]\
\
\

\f1 \'b7\'d6\'ce\'f6\'a3\'ba
\f0 \
\pard\pardeftab720\partightenfactor0

\f2\fs28 \cf0 \expnd0\expndtw0\kerning0
\
\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf0 \cb3 \kerning1\expnd0\expndtw0 	
\f1 \expnd0\expndtw0\kerning0
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 {{\NeXTGraphic Â±èÂπïÂø´ÁÖß 2017-05-17 ‰∏äÂçà10.26.53.png \width6760 \height6480
}¨}\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Â±èÂπïÂø´ÁÖß 2017-05-17 ‰∏äÂçà10.28.53.png \width11920 \height6480
}¨}\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\
   
\f2\fs28 \cb3 1	
\f1 \expnd0\expndtw0\kerning0
\'bb\'f9\'b1\'be\'b5\'c4\'cb\'bc\'cf\'eb\'ca\'c7\'b6\'d4\'ca\'e4\'c8\'eb
\f2 buildings
\f1 \'d7\'f6\'d2\'bb\'b8\'f6\'cf\'df\'d0\'d4\'c9\'a8\'c3\'e8\'a3\'ac\'b2\'a2\'c7\'d2\'d6\'bb\'b4\'a6\'c0\'ed\'cb\'fc\'b5\'c4\'c1\'bd\'b8\'f6\'b5\'e3\'a3\'a8\'bc\'b4\'bf\'aa\'ca\'bc\'b5\'e3\'ba\'cd\'bd\'e1\'ca\'f8\'b5\'e3\'a3\'a9\'a3\'bb
\f2 \cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf0 \cb3 \kerning1\expnd0\expndtw0 {\listtext	2	}
\f1 \expnd0\expndtw0\kerning0
\'bb\'b9\'d3\'d0\'d2\'bb\'b8\'f6\'b9\'d8\'bc\'fc\'b5\'e3\'ca\'c7\'d2\'aa\'ca\'b9\'d3\'c3\'d2\'bb\'b8\'f6\'d3\'c5\'cf\'c8\'b6\'d3\'c1\'d0
\f2 (priority_queue)
\f1 \'c0\'b4\'bc\'c7\'c2\'bc\'cb\'f9\'d3\'d0\'b4\'a6\'d3\'da
\f2 "alive"
\f1 \'d7\'b4\'cc\'ac\'b5\'c4
\f2 buildings
\f1 \'a3\'a8\'b4\'a6\'d3\'da
\f2 alive
\f1 \'d7\'b4\'cc\'ac\'b5\'c4\'bd\'a8\'d6\'fe\'ca\'c7\'d6\'b8\'c4\'c7\'c3\'b4\'d4\'da\'ba\'f3\'c3\'e6\'b5\'c4\'b1\'e4\'c1\'bf\'b9\'fd\'b3\'cc\'d6\'d0\'bf\'c9\'c4\'dc\'bb\'e1\'b1\'bb\'ca\'b9\'d3\'c3\'b5\'bd\'b5\'c4\'bd\'a8\'d6\'fe\'a3\'a9\'a3\'bb
\f2 \cb1 \
\ls2\ilvl0\cb3 \kerning1\expnd0\expndtw0 {\listtext	3	}
\f1 \expnd0\expndtw0\kerning0
\'d3\'c5\'cf\'c8\'b6\'d3\'c1\'d0\'d0\'e8\'d2\'aa\'b8\'f9\'be\'dd\'b8\'df\'b6\'c8\'ba\'cd\'bd\'e1\'ca\'f8\'b5\'e3
\f2 x
\f1 \'d7\'f8\'b1\'ea\'c0\'b4\'bd\'f8\'d0\'d0\'c5\'c5\'d0\'f2\'a3\'a8\'d3\'c5\'cf\'c8\'b6\'d3\'c1\'d0\'b5\'c4\'b6\'d3\'ca\'d7\'d4\'aa\'cb\'d8\'ca\'c7\'b8\'df\'b6\'c8\'d6\'b5\'d7\'ee\'b4\'f3\'a3\'ac\'c8\'e7\'b9\'fb\'b4\'e6\'d4\'da\'b8\'df\'b6\'c8\'d6\'b5\'cf\'e0\'cd\'ac\'b5\'c4\'b5\'e3\'a3\'ac\'bd\'e1\'ca\'f8\'b5\'e3
\f2 x
\f1 \'d7\'f8\'b1\'ea\'b4\'f3\'b5\'c4\'b5\'e3\'ce\'bb\'d3\'da\'b6\'d3\'ca\'d7\'a3\'a9\'a3\'bb
\f2 \cb1 \
\ls2\ilvl0\cb3 \kerning1\expnd0\expndtw0 {\listtext	4	}
\f1 \expnd0\expndtw0\kerning0
\'b6\'d4
\f2 buildings
\f1 \'d6\'b4\'d0\'d0\'b5\'fc\'b4\'fa\'b2\'d9\'d7\'f7\'a3\'ac\'d5\'d2\'b5\'bd\'b5\'b1\'c7\'b0\'d5\'fd\'d4\'da\'b4\'a6\'c0\'ed\'b5\'c4\'b5\'e3\'a3\'a8\'bc\'b4\'bf\'c9\'c4\'dc\'b5\'c4\'b9\'d5\'b5\'e3\'a3\'a9\'a3\'ac\'b5\'b1\'c7\'b0\'d5\'fd\'d4\'da\'b4\'a6\'c0\'ed\'b5\'c4\'b5\'e3\'d2\'aa\'c3\'b4\'ca\'c7\'cf\'c2\'d2\'bb\'b8\'f6
\f2 building
\f1 \'b5\'c4\'bf\'aa\'ca\'bc\'b5\'e3\'a3\'ac\'d2\'aa\'c3\'b4\'ca\'c7\'d3\'c5\'cf\'c8\'b6\'d3\'c1\'d0\'d6\'d0\'b6\'d3\'ca\'d7\'d4\'aa\'cb\'d8\'b5\'c4\'bd\'e1\'ca\'f8\'b5\'e3\'a3\'bb
\f2 \cb1 \
\ls2\ilvl0\cb3 \kerning1\expnd0\expndtw0 {\listtext	5	}
\f1 \expnd0\expndtw0\kerning0
\'c8\'e7\'b9\'fb\'b5\'b1\'c7\'b0\'b5\'c4
\f2 building
\f1 \'b5\'c4\'bf\'aa\'ca\'bc\'b5\'e3\'b5\'c4
\f2 x
\f1 \'d7\'f8\'b1\'ea\'b4\'f3\'d3\'da\'d3\'c5\'cf\'c8\'b6\'d3\'c1\'d0\'d6\'d0\'b6\'d3\'ca\'d7\'d4\'aa\'cb\'d8\'b5\'c4\'bd\'e1\'ca\'f8\'b5\'e3
\f2 x
\f1 \'d7\'f8\'b1\'ea\'a3\'ac\'c4\'c7\'c3\'b4\'ca\'d7\'cf\'c8\'b4\'a6\'c0\'ed\'d3\'c5\'cf\'c8\'b6\'d3\'c1\'d0\'d6\'d0\'b5\'c4\'b6\'d3\'ca\'d7\'d4\'aa\'cb\'d8\'a3\'ba\'bd\'ab\'d3\'c5\'cf\'c8\'b6\'d3\'c1\'d0\'d6\'d0\'b5\'c4\'d4\'aa\'cb\'d8\'b5\'af\'b3\'f6\'d6\'b1\'b5\'bd\'cb\'fc\'ce\'aa\'bf\'d5\'bb\'f2\'d5\'df\'d5\'d2\'b5\'bd\'b5\'da\'d2\'bb\'b8\'f6\'bd\'e1\'ca\'f8\'b5\'e3
\f2 x
\f1 \'d7\'f8\'b1\'ea\'b4\'f3\'d3\'da\'b5\'b1\'c7\'b0\'b4\'a6\'c0\'ed\'b5\'e3\'b5\'c4\'a1\'a3
\f2 \cb1 \
\ls2\ilvl0\cb3 \kerning1\expnd0\expndtw0 {\listtext	6	}
\f1 \expnd0\expndtw0\kerning0
\'b7\'f1\'d4\'f2\'a3\'ac\'c8\'e7\'b9\'fb\'b5\'b1\'c7\'b0\'b5\'c4
\f2 building
\f1 \'b5\'c4\'bf\'aa\'ca\'bc\'b5\'e3
\f2 x
\f1 \'d7\'f8\'b1\'ea\'d0\'a1\'d3\'da\'b5\'c8\'d3\'da\'d3\'c5\'cf\'c8\'b6\'d3\'c1\'d0\'d6\'d0\'b6\'d1\'ca\'d7\'d4\'aa\'cb\'d8\'b5\'c4\'bd\'e1\'ca\'f8\'b5\'e3
\f2 x
\f1 \'d7\'f8\'b1\'ea\'a3\'ac\'c4\'c7\'c3\'b4\'b4\'a6\'c0\'ed\'b5\'b1\'c7\'b0\'b5\'c4
\f2 building
\f1 \'a3\'ba\'bd\'ab\'cb\'fc\'b5\'c4\'b8\'df\'b6\'c8\'ba\'cd\'bd\'e1\'ca\'f8\'b5\'e3
\f2 x
\f1 \'d7\'f8\'b1\'ea\'b7\'c5\'b5\'bd\'d3\'c5\'cf\'c8\'b6\'d3\'c1\'d0\'d6\'d0\'a3\'bb\'c5\'d0\'b6\'cf\'b8\'df\'b6\'c8\'d6\'b5\'ca\'c7\'b7\'f1\'b7\'a2\'c9\'fa\'c1\'cb\'b1\'e4\'bb\'af\'a3\'ac\'c8\'e7\'b9\'fb\'b7\'a2\'c9\'fa\'c1\'cb\'b1\'e4\'bb\'af\'a3\'ac\'bd\'ab\'cb\'fc\'b7\'c5\'c8\'eb\'b5\'bd\'bd\'e1\'b9\'fb\'bc\'af\'d6\'d0\'a1\'a3
\f0\fs24 \cb1 \kerning1\expnd0\expndtw0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Â±èÂπïÂø´ÁÖß 2017-05-17 ‰∏äÂçà10.35.22.png \width13800 \height18180
}¨}\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Â±èÂπïÂø´ÁÖß 2017-05-17 ‰∏äÂçà10.49.58.png \width11600 \height8400
}¨}\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0
\f2\fs28 \cf0 \cb3 {\listtext	1	}
\f1 \expnd0\expndtw0\kerning0
\'bb\'f9\'b1\'be\'b5\'c4\'cb\'bc\'cf\'eb\'ca\'c7\'b6\'d4\'ca\'e4\'c8\'eb
\f2 buildings
\f1 \'d7\'f6\'d2\'bb\'b8\'f6\'cf\'df\'d0\'d4\'c9\'a8\'c3\'e8\'a3\'ac\'b2\'a2\'c7\'d2\'d6\'bb\'b4\'a6\'c0\'ed\'cb\'fc\'b5\'c4\'c1\'bd\'b8\'f6\'b5\'e3\'a3\'a8\'bc\'b4\'bf\'aa\'ca\'bc\'b5\'e3\'ba\'cd\'bd\'e1\'ca\'f8\'b5\'e3\'a3\'a9\'a3\'bb
\f2 \cb1 \
\ls3\ilvl0\cb3 \kerning1\expnd0\expndtw0 {\listtext	2	}
\f1 \expnd0\expndtw0\kerning0
\'bb\'b9\'d3\'d0\'d2\'bb\'b8\'f6\'b9\'d8\'bc\'fc\'b5\'e3\'ca\'c7\'d2\'aa\'ca\'b9\'d3\'c3\'d2\'bb\'b8\'f6\'d3\'c5\'cf\'c8\'b6\'d3\'c1\'d0
\f2 (priority_queue)
\f1 \'c0\'b4\'bc\'c7\'c2\'bc\'cb\'f9\'d3\'d0\'b4\'a6\'d3\'da
\f2 "alive"
\f1 \'d7\'b4\'cc\'ac\'b5\'c4
\f2 buildings
\f1 \'a3\'a8\'b4\'a6\'d3\'da
\f2 alive
\f1 \'d7\'b4\'cc\'ac\'b5\'c4\'bd\'a8\'d6\'fe\'ca\'c7\'d6\'b8\'c4\'c7\'c3\'b4\'d4\'da\'ba\'f3\'c3\'e6\'b5\'c4\'b1\'e4\'c1\'bf\'b9\'fd\'b3\'cc\'d6\'d0\'bf\'c9\'c4\'dc\'bb\'e1\'b1\'bb\'ca\'b9\'d3\'c3\'b5\'bd\'b5\'c4\'bd\'a8\'d6\'fe\'a3\'a9\'a3\'bb
\f2 \cb1 \
\ls3\ilvl0\cb3 \kerning1\expnd0\expndtw0 {\listtext	3	}
\f1 \expnd0\expndtw0\kerning0
\'d3\'c5\'cf\'c8\'b6\'d3\'c1\'d0\'d0\'e8\'d2\'aa\'b8\'f9\'be\'dd\'b8\'df\'b6\'c8\'ba\'cd\'bd\'e1\'ca\'f8\'b5\'e3
\f2 x
\f1 \'d7\'f8\'b1\'ea\'c0\'b4\'bd\'f8\'d0\'d0\'c5\'c5\'d0\'f2\'a3\'a8\'d3\'c5\'cf\'c8\'b6\'d3\'c1\'d0\'b5\'c4\'b6\'d3\'ca\'d7\'d4\'aa\'cb\'d8\'ca\'c7\'b8\'df\'b6\'c8\'d6\'b5\'d7\'ee\'b4\'f3\'a3\'ac\'c8\'e7\'b9\'fb\'b4\'e6\'d4\'da\'b8\'df\'b6\'c8\'d6\'b5\'cf\'e0\'cd\'ac\'b5\'c4\'b5\'e3\'a3\'ac\'bd\'e1\'ca\'f8\'b5\'e3
\f2 x
\f1 \'d7\'f8\'b1\'ea\'b4\'f3\'b5\'c4\'b5\'e3\'ce\'bb\'d3\'da\'b6\'d3\'ca\'d7\'a3\'a9\'a3\'bb
\f2 \cb1 \
\ls3\ilvl0\cb3 \kerning1\expnd0\expndtw0 {\listtext	4	}
\f1 \expnd0\expndtw0\kerning0
\'b6\'d4
\f2 buildings
\f1 \'d6\'b4\'d0\'d0\'b5\'fc\'b4\'fa\'b2\'d9\'d7\'f7\'a3\'ac\'d5\'d2\'b5\'bd\'b5\'b1\'c7\'b0\'d5\'fd\'d4\'da\'b4\'a6\'c0\'ed\'b5\'c4\'b5\'e3\'a3\'a8\'bc\'b4\'bf\'c9\'c4\'dc\'b5\'c4\'b9\'d5\'b5\'e3\'a3\'a9\'a3\'ac\'b5\'b1\'c7\'b0\'d5\'fd\'d4\'da\'b4\'a6\'c0\'ed\'b5\'c4\'b5\'e3\'d2\'aa\'c3\'b4\'ca\'c7\'cf\'c2\'d2\'bb\'b8\'f6
\f2 building
\f1 \'b5\'c4\'bf\'aa\'ca\'bc\'b5\'e3\'a3\'ac\'d2\'aa\'c3\'b4\'ca\'c7\'d3\'c5\'cf\'c8\'b6\'d3\'c1\'d0\'d6\'d0\'b6\'d3\'ca\'d7\'d4\'aa\'cb\'d8\'b5\'c4\'bd\'e1\'ca\'f8\'b5\'e3\'a3\'bb
\f2 \cb1 \
\ls3\ilvl0\cb3 \kerning1\expnd0\expndtw0 {\listtext	5	}
\f1 \expnd0\expndtw0\kerning0
\'c8\'e7\'b9\'fb\'b5\'b1\'c7\'b0\'b5\'c4
\f2 building
\f1 \'b5\'c4\'bf\'aa\'ca\'bc\'b5\'e3\'b5\'c4
\f2 x
\f1 \'d7\'f8\'b1\'ea\'b4\'f3\'d3\'da\'d3\'c5\'cf\'c8\'b6\'d3\'c1\'d0\'d6\'d0\'b6\'d3\'ca\'d7\'d4\'aa\'cb\'d8\'b5\'c4\'bd\'e1\'ca\'f8\'b5\'e3
\f2 x
\f1 \'d7\'f8\'b1\'ea\'a3\'ac\'c4\'c7\'c3\'b4\'ca\'d7\'cf\'c8\'b4\'a6\'c0\'ed\'d3\'c5\'cf\'c8\'b6\'d3\'c1\'d0\'d6\'d0\'b5\'c4\'b6\'d3\'ca\'d7\'d4\'aa\'cb\'d8\'a3\'ba\'bd\'ab\'d3\'c5\'cf\'c8\'b6\'d3\'c1\'d0\'d6\'d0\'b5\'c4\'d4\'aa\'cb\'d8\'b5\'af\'b3\'f6\'d6\'b1\'b5\'bd\'cb\'fc\'ce\'aa\'bf\'d5\'bb\'f2\'d5\'df\'d5\'d2\'b5\'bd\'b5\'da\'d2\'bb\'b8\'f6\'bd\'e1\'ca\'f8\'b5\'e3
\f2 x
\f1 \'d7\'f8\'b1\'ea\'b4\'f3\'d3\'da\'b5\'b1\'c7\'b0\'b4\'a6\'c0\'ed\'b5\'e3\'b5\'c4\'a1\'a3
\f2 \cb1 \
\ls3\ilvl0\cb3 \kerning1\expnd0\expndtw0 {\listtext	6	}
\f1 \expnd0\expndtw0\kerning0
\'b7\'f1\'d4\'f2\'a3\'ac\'c8\'e7\'b9\'fb\'b5\'b1\'c7\'b0\'b5\'c4
\f2 building
\f1 \'b5\'c4\'bf\'aa\'ca\'bc\'b5\'e3
\f2 x
\f1 \'d7\'f8\'b1\'ea\'d0\'a1\'d3\'da\'b5\'c8\'d3\'da\'d3\'c5\'cf\'c8\'b6\'d3\'c1\'d0\'d6\'d0\'b6\'d1\'ca\'d7\'d4\'aa\'cb\'d8\'b5\'c4\'bd\'e1\'ca\'f8\'b5\'e3
\f2 x
\f1 \'d7\'f8\'b1\'ea\'a3\'ac\'c4\'c7\'c3\'b4\'b4\'a6\'c0\'ed\'b5\'b1\'c7\'b0\'b5\'c4
\f2 building
\f1 \'a3\'ba\'bd\'ab\'cb\'fc\'b5\'c4\'b8\'df\'b6\'c8\'ba\'cd\'bd\'e1\'ca\'f8\'b5\'e3
\f2 x
\f1 \'d7\'f8\'b1\'ea\'b7\'c5\'b5\'bd\'d3\'c5\'cf\'c8\'b6\'d3\'c1\'d0\'d6\'d0\'a3\'bb\'c5\'d0\'b6\'cf\'b8\'df\'b6\'c8\'d6\'b5\'ca\'c7\'b7\'f1\'b7\'a2\'c9\'fa\'c1\'cb\'b1\'e4\'bb\'af\'a3\'ac\'c8\'e7\'b9\'fb\'b7\'a2\'c9\'fa\'c1\'cb\'b1\'e4\'bb\'af\'a3\'ac\'bd\'ab\'cb\'fc\'b7\'c5\'c8\'eb\'b5\'bd\'bd\'e1\'b9\'fb\'bc\'af\'d6\'d0\'a1\'a3\
\pard\tx566\pardeftab720\partightenfactor0

\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Â±èÂπïÂø´ÁÖß 2017-05-17 ‰∏äÂçà10.36.32.png \width11780 \height7840
}¨}\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Â±èÂπïÂø´ÁÖß 2017-05-17 ‰∏äÂçà10.36.39.png \width23300 \height10020
}¨}\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Â±èÂπïÂø´ÁÖß 2017-05-17 ‰∏äÂçà10.36.48.png \width22040 \height4740
}¨}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\
\
*/\

\fs36 class Solution \{\
public:\
    vector<pair<int, int>> getSkyline(vector<vector<int>>& buildings) \
    \{  \
        vector<pair<int, int>> res;  \
        int cur=0, cur_X, cur_H =-1,  len = buildings.size();  \
        priority_queue< pair<int, int>> liveBlg; // 
\f1 \'b5\'da\'d2\'bb\'b8\'f6\'d4\'aa\'cb\'d8\'ca\'c7\'b8\'df\'b6\'c8
\f0 buindings[k][2]
\f1 \'a3\'ac\'b5\'da\'b6\'fe\'b8\'f6\'d4\'aa\'cb\'d8\'ca\'c7\'bd\'e1\'ca\'f8\'b5\'e3\'b5\'c4
\f0 x
\f1 \'d7\'f8\'b1\'ea
\f0 buildings[k][1]  \
        while(cur<len || !liveBlg.empty())  \
        \{   \
            // 
\f1 \'c8\'e7\'b9\'fb\'ca\'c7\'d7\'ee\'bf\'aa\'ca\'bc\'b4\'a6\'c0\'ed\'bd\'a8\'d6\'fe\'a3\'ac\'bb\'f2\'d5\'df\'b3\'f6\'cf\'d6\'bd\'a8\'d6\'fe\'ce\'ef\'b2\'bb\'c1\'ac\'d0\'f8\'b5\'c4\'c7\'e9\'bf\'f6\'a3\'a8\'bc\'b4\'b6\'d4\'d3\'da\'c9\'cf\'c3\'e6\'b5\'da
\f0 4
\f1 \'b8\'f6\'bd\'a8\'d6\'fe\'ba\'cd\'b5\'da
\f0 3
\f1 \'b8\'f6\'bd\'a8\'d6\'fe\'b7\'d6\'bf\'aa\'b5\'c4\'c7\'e9\'bf\'f6\'a3\'a9
\f0   \
            cur_X = liveBlg.empty()? buildings[cur][0]:liveBlg.top().second;\cb4  // 
\f1 \'d7\'ee\'b8\'df\'bd\'a8\'d6\'fe\'b5\'c4\'bd\'e1\'ca\'f8\'b5\'e3
\f0  \cb1  \
  \
            if(cur>=len || buildings[cur][0] > cur_X)  \
            \{  \
                //
\f1 \'bd\'ab\'bd\'e1\'ca\'f8\'ca\'b1\'bc\'e4\'d0\'a1\'d3\'da\'b5\'c8\'d3\'da\'d7\'ee\'b8\'df\'bd\'a8\'d6\'fe\'bd\'e1\'ca\'f8\'b5\'e3\'b5\'c4\'c4\'c4\'d0\'a9\'bd\'a8\'d6\'fe\'ce\'ef\'b4\'d3\'d3\'c5\'cf\'c8\'b6\'d3\'c1\'d0\'d6\'d0\'b5\'af\'b3\'f6
\f0   \
                while(!liveBlg.empty() && ( liveBlg.top().second <= cur_X) ) \
                    liveBlg.pop();  \
            \}  \
            else  \
            \{   \
                //
\f1 \'c8\'e7\'b9\'fb\'b5\'b1\'c7\'b0\'b1\'e9\'c0\'fa\'b5\'bd\'b5\'c4\'bd\'a8\'d6\'fe\'ce\'ef\'d4\'da\'d7\'ee\'b8\'df\'b5\'c4\'bd\'a8\'d6\'fe\'ce\'ef\'bd\'e1\'ca\'f8\'d6\'ae\'c7\'b0\'bf\'aa\'ca\'bc\'a3\'ac\'c4\'c7\'c3\'b4\'b4\'a6\'c0\'ed\'b5\'b1\'c7\'b0\'b5\'c4\'bd\'a8\'d6\'fe\'ce\'ef
\f0   \
                cur_X = buildings[cur][0];  \
                while(cur<len && buildings[cur][0]== cur_X)  // 
\f1 \'b4\'a6\'c0\'ed\'cb\'f9\'d3\'d0\'d4\'da\'cd\'ac\'d2\'bb\'b5\'e3\'bf\'aa\'ca\'bc\'b5\'c4\'bd\'a8\'d6\'fe\'ce\'ef
\f0   \
                \{  // just push them in the queue  \
                    liveBlg.push(make_pair(buildings[cur][2], buildings[cur][1]));  \
                    cur++;  \
                \}  \
            \}  \
            cur_H = liveBlg.empty()?0:liveBlg.top().first; // 
\f1 \'ca\'e4\'b3\'f6\'d7\'ee\'b6\'a5\'b6\'cb\'b5\'c4\'bd\'a8\'d6\'fe\'ce\'ef\'b5\'c4\'b8\'df\'b6\'c8
\f0   \
            if(res.empty() || (res.back().second != cur_H) ) \
                res.push_back(make_pair(cur_X, cur_H));  \
        \}  \
        return res;  \
    \}  \
\};  }