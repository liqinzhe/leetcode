{\rtf1\ansi\ansicpg936\cocoartf1504\cocoasubrtf820
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /*\
Write a function to delete a node (except the tail) in a singly linked list, given only access to that node.\
\
Supposed the linked list is 1 -> 2 -> 3 -> 4 and you are given the third node with value 3, the linked list should become 1 -> 2 -> 4 after calling your function.\
\

\f1 way-1:\'bf\'c9\'d2\'d4\'c8\'ab\'b2\'bf\'ba\'f3\'d2\'c6\
way-2:\'c9\'be\'b3\'fd\'ba\'f3\'c3\'e6\'c4\'c7\'b8\'f6\

\f0 \
\
*/\
/**\
 * Definition for singly-linked list.\
 * struct ListNode \{\
 *     int val;\
 *     ListNode *next;\
 *     ListNode(int x) : val(x), next(NULL) \{\}\
 * \};\
 */\
class Solution \{\
public:\
    void deleteNode(ListNode* node) \
    \{\
        //way-1\
        /*\
        ListNode*p=node;\
        ListNode*last_p;\
        while(p->next)\
        \{\
            p->val=p->next->val;\
            last_p=p;\
            p=p->next;\
        \}\
        last_p->next=NULL;\
        delete(p);\
        */\
        \
        //way-2\
        ListNode*p=node->next;\
        node->val=p->val;\
        node->next=p->next;\
        delete(p);\
        \
    \}\
\};}