{\rtf1\ansi\ansicpg936\cocoartf1504\cocoasubrtf820
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;}
{\*\expandedcolortbl;;\cssrgb\c20000\c20000\c20000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs28 \cf2 \expnd0\expndtw0\kerning0
/*\
Given two integers n and k, return all possible combinations of k numbers out of 1 ... n.\
\
For example,\
If n = 4 and k = 2, a solution is:\
\
[\
  [2,4],\
  [3,4],\
  [2,3],\
  [1,2],\
  [1,3],\
  [1,4],\
]\
\
backtracking!\
\
*/\
class Solution \{\
public:\
    void guocheng(int n,int k,int pos,vector<vector<int>> &result,vector<int> m1)\
    \{   \
        //k
\f1 \'b4\'fa\'b1\'ed\'bb\'b9\'d2\'aa\'d1\'a1\'bc\'b8\'b8\'f6
\f0   pos
\f1 \'b4\'fa\'b1\'ed\'c9\'cf\'d2\'bb\'b8\'f6\'ca\'c7\'d1\'a1\'b5\'c4\'ca\'c7\'b6\'e0\'c9\'d9
\f0 \
        if(k==0)\
        \{  \
            result.push_back(m1);\
            return;\
        \}\
        for(int i=pos+1;i<=n-k+1;i++)\
        \{\
            m1.push_back(i);\
            guocheng(n,k-1,i,result,m1);\
            m1.pop_back();\
        \}\
    \}\
    \
    vector<vector<int>> combine(int n, int k) \
    \{\
        vector<vector<int>> result;\
        if(k==0)\
            return result;\
          \
        vector<int> m1;\
        guocheng(n,k,0,result,m1);\
        \
        return result;\
    \}\
\};}