{\rtf1\ansi\ansicpg936\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /*\
There are N gas stations along a circular route, where the amount of gas at station i is gas[i].\
\
You have a car with an unlimited gas tank and it costs cost[i] of gas to travel from station i to its next station (i+1). You begin the journey with an empty tank at one of the gas stations.\
\
Return the starting gas station's index if you can travel around the circuit once, otherwise return -1.\
\
Note:\
The solution is guaranteed to be unique.\
\

\f1 \'cb\'bc\'c2\'b7\'be\'cd\'ca\'c7
\f0  
\f1 \'d2\'bb\'b4\'ce\'b1\'e9\'c0\'fa\'a3\'ac\'c8\'e7\'b9\'fb\'d2\'bb\'b6\'ce\'c2\'b7\'a3\'a8\'c3\'bf\'b4\'ce
\f0 remain
\f1 \'b9\'e9
\f0 0
\f1 \'cb\'e3\'b4\'d3\'d0\'c2\'bf\'aa\'ca\'bc\'d2\'bb\'b6\'ce\'c2\'b7\'a3\'a9\'b5\'c4
\f0 remain<0
\f1 \'be\'cd\'b4\'e6\'b5\'bd
\f0 debt
\f1 \'c0\'ef\'c3\'e6\'a3\'ac\'d7\'ee\'ba\'f3\'b5\'c4
\f0 remain+debt
\f1 \'c4\'dc\'c5\'d0\'b6\'cf\'ca\'c7\'b7\'f1\'d7\'df\'cd\'ea\'a1\'a3
\f0 \
\
*/\
class Solution \{\
public:\
    int canCompleteCircuit(vector<int>& gas, vector<int>& cost) \
    \{\
        int startpoint = 0;\
        int debt = 0;\
        int remain = 0;\
       \
        for (int i = 0; i < gas.size(); i++)\
        \{\
            remain += gas[i] - cost[i];\
            if (remain < 0)\
            \{\
               debt += remain;\
               startpoint = i + 1;\
               remain = 0;\
            \}\
        \}\
        return (remain + debt >= 0) ? startpoint : -1;\
    \}\
\};}