{\rtf1\ansi\ansicpg936\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /*\
Given a range [m, n] where 0 <= m <= n <= 2147483647, return the bitwise AND of all numbers in this range, inclusive.\
\
For example, given the range [5, 7], you should return 4.\
\

\f1 \'c7\'f8\'bc\'e4\'c4\'da\'cb\'f9\'d3\'d0\'ca\'fd\'b5\'c4\'d3\'eb\'a1\'a3\'d2\'b2\'be\'cd\'ca\'c7\'c7\'f3\'b9\'ab\'b9\'b2\'b5\'c4\'c7\'b0\'d7\'ba\'a1\'a3
\f0 \
\
*/\
class Solution \{\
public:\
    int rangeBitwiseAnd(int m, int n) \
    \{\
        int count = 0;\
        while ( m != n )\
        \{\
            m>>=1;\
            n>>=1;\
            count++;\
        \}\
        return m<<count;\
    \}\
\};}