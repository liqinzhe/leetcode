{\rtf1\ansi\ansicpg936\cocoartf1504\cocoasubrtf810
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /*\
Given an array of integers, every element appears twice except for one. Find that single one.\
\
Note:\
Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?\
\

\f1 \'b2\'bb\'c4\'dc\'d3\'c3\'b6\'ee\'cd\'e2\'bf\'d5\'bc\'e4\'a3\'ac\'cb\'f9\'d2\'d4
\f0 map
\f1 \'d2\'b2\'b2\'bb\'d0\'d0
\f0 \
\

\f1 \'b1\'be\'cc\'e2\'b7\'c7\'b3\'a3\'c7\'c9\'c3\'ee\'b5\'c4\'d4\'cb\'d3\'c3
\f0  
\f1 \'d2\'ec\'bb\'f2\'d4\'cb\'cb\'e3\'b7\'fb
\f0 ^\
*/\
class Solution \{\
public:\
    int singleNumber(vector<int>& nums) \
    \{\
        int ret=0;\
        for(int i=0;i<nums.size();i++)\
            ret^=nums[i];\
       \
        return ret;   \
    \}\
\};}