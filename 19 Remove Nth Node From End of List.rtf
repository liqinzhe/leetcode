{\rtf1\ansi\ansicpg936\cocoartf1504\cocoasubrtf820
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /*\
Given a linked list, remove the nth node from the end of list and return its head.\
\
For example,\
\
   Given linked list: 1->2->3->4->5, and n = 2.\
\
   After removing the second node from the end, the linked list becomes 1->2->3->5.\
Note:\
Given n will always be valid.\
Try to do this in one pass.\
\

\f1 \'d2\'aa\'c7\'f3\'d2\'bb\'b4\'ce\'b1\'e9\'c0\'fa\'a3\'ac\'be\'cd\'d3\'c3\'c1\'bd\'b8\'f6\'cf\'e0\'b2\'een\'b5\'c4\'bd\'da\'b5\'e3\'cd\'f9\'ba\'f3\'d2\'c6\'a3\'ac\'b5\'da\'d2\'bb\'b8\'f6\'b5\'bd\'d7\'ee\'ba\'f3\'a3\'ac\'b5\'da\'b6\'fe\'b8\'f6\'be\'cd\'b5\'bd\'c1\'cb
\f0 n-1
\f1 \'b8\'f6
\f0 \
*/\
/**\
 * Definition for singly-linked list.\
 * struct ListNode \{\
 *     int val;\
 *     ListNode *next;\
 *     ListNode(int x) : val(x), next(NULL) \{\}\
 * \};\
 */\
class Solution \{\
public:\
    ListNode* removeNthFromEnd(ListNode* head, int n) \
    \{  \
       ListNode *p=head;\
       for(int i=0;i<n;i++)\
       \{  \
            if(p->next)\
                p=p->next;\
            else\
                return head->next;\
       \}\
       ListNode *q=head;\
       while(p->next)\
       \{\
           p=p->next;\
           q=q->next;\
       \}\
       p=q->next;\
       q->next=p->next;\
       free(p);\
       return head;\
    \}\
\};}