{\rtf1\ansi\ansicpg936\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fnil\fcharset0 Menlo-Regular;\f2\fswiss\fcharset0 Helvetica;
\f3\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red184\green14\blue61;\red247\green238\blue241;
\red242\green242\blue242;}
{\*\expandedcolortbl;;\cssrgb\c20000\c20000\c20000;\cssrgb\c78039\c14510\c30588;\cssrgb\c97647\c94902\c95686;
\cssrgb\c96078\c96078\c96078;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs28 \cf2 \expnd0\expndtw0\kerning0
Write a bash script to calculate the frequency of each word in a text file 
\f1\fs25\fsmilli12600 \cf3 \cb4 words.txt
\f0\fs28 \cf2 \cb1 .\
For simplicity sake, you may assume:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f1\fs25\fsmilli12600 \cf3 \cb4 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
words.txt
\f0\fs28 \cf2 \cb1  contains only lowercase characters and space 
\f1\fs25\fsmilli12600 \cf3 \cb4 ' '
\f0\fs28 \cf2 \cb1  characters.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Each word must consist of lowercase characters only.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Words are separated by one or more whitespace characters.\
\pard\pardeftab720\partightenfactor0
\cf2 \
For example, assume that 
\f1\fs25\fsmilli12600 \cf3 \cb4 words.txt
\f0\fs28 \cf2 \cb1  has the following content:\
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf2 \cb5 the day is sunny the the\
the sunny is is\
\pard\pardeftab720\partightenfactor0

\f0\fs28 \cf2 \cb1 Your script should output the following, sorted by descending frequency:
\f1\fs26 \cb5 \
the 4\
is 3\
sunny 2\
day 1\
\pard\pardeftab720\partightenfactor0

\f0\b\fs28 \cf2 \cb1 Note:
\b0 \
Don't worry about handling ties, it is guaranteed that each word's frequency count is unique.\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f2\fs24 \cf0 \kerning1\expnd0\expndtw0 \
\
# Read from the file words.txt and output the word frequency list to stdout.\
#1.
\f3 \'c0\'fb\'d3\'c3
\f2 awk
\f3 \'c4\'ac\'c8\'cf\'d2\'bb\'d0\'d0\'d2\'bb\'cc\'f5\'bc\'c7\'c2\'bc\'a3\'ac\'c4\'ac\'c8\'cf\'d2\'d4\'bf\'d5\'b8\'f1\'bb\'ae\'b7\'d6\'c3\'bf\'cc\'f5\'bc\'c7\'c2\'bc\'a3\'ac
\f2 NF
\f3 \'ce\'aa\'bb\'ae\'b7\'d6\'b5\'c4\'d7\'dc\'bf\'e9\'ca\'fd\'cf\'c8\'b4\'f2\'d3\'a1\'b3\'f6\'cb\'f9\'d3\'d0\'b5\'a5\'b4\'ca\'a1\'a3
\f2 \
#2.
\f3 \'c5\'c5\'d0\'f2
\f2 +
\f3 \'cd\'b3\'bc\'c6
\f2 +
\f3 \'cf\'fb\'b3\'fd\'d6\'d8\'b8\'b4
\f2 \
#3.
\f3 \'ca\'e4\'b3\'f6
\f2 \
\
awk '\{i=1;while(i<=NF)\{print $i;i++\}\}' words.txt | sort | uniq -c | sort -r | awk '\{print $2 " " $1\}'}