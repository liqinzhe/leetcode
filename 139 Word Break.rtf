{\rtf1\ansi\ansicpg936\cocoartf1504\cocoasubrtf820
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /*\
Given a non-empty string s and a dictionary wordDict containing a list of non-empty words, determine if s can be segmented into a space-separated sequence of one or more dictionary words. You may assume the dictionary does not contain duplicate words.\
\
For example, given\
s = "leetcode",\
dict = ["leet", "code"].\
\
Return true because "leetcode" can be segmented as "leet code".\
\
way-1: 
\f1 \'b1\'be\'cc\'e2\'d7\'ee\'b8\'df\'d0\'a7\'b5\'c4\'d2\'bb\'d6\'d6\'b6\'af\'cc\'ac\'b9\'e6\'bb\'ae\'bd\'e2\'b7\'a8\

\f0 \
A[i]=1
\f1 \'b4\'fa\'b1\'edmap\'d6\'d0\'bf\'c9\'d2\'d4\'d7\'e9\'b3\'c9s\'c7\'b0i\'b8\'f6\'d7\'d6\'b7\'fb
\f0 \
\
*/\
class Solution \{\
public:\
    bool wordBreak(string s, vector<string>& word) \
    \{\
        //way-1\
        \
        int n=s.size();\
        int A[n+1]=\{0\};\
        A[0]=1;\
        \
        //
\f1 \'b2\'e9\'d5\'d2\'b8\'c4\'ce\'aa
\f0 map\
        map<string,int> mm;\
        for(int i=0;i<word.size();i++)\
            mm[word[i]]++;\
        \
        for(int i=0;i<n;i++)\
        \{\
            if(A[i]==1)\
            \{\
                for(int j=i;j<n;j++)\
                \{\
                    if(mm.find(s.substr(i,j-i+1))!=mm.end())\
                        A[j+1]=1;\
                \}\
            \}\
            if(A[n]==1)\
                return 1;\
        \}\
        return 0;\
    \}\
\};}