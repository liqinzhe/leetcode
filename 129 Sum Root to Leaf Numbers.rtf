{\rtf1\ansi\ansicpg936\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /*\
Given a binary tree containing digits from 0-9 only, each root-to-leaf path could represent a number.\
\
An example is the root-to-leaf path 1->2->3 which represents the number 123.\
\
Find the total sum of all root-to-leaf numbers.\
\
For example,\
\
    1\
   / \\\
  2   3\
The root-to-leaf path 1->2 represents the number 12.\
The root-to-leaf path 1->3 represents the number 13.\
\
Return the sum = 12 + 13 = 25.\
\

\f1 \'cb\'bc\'c2\'b7\'b1\'c8\'bd\'cf\'bc\'f2\'b5\'a5\'a3\'ac\'be\'cd\'ca\'c7\'b4\'d3\'b8\'f9\'bd\'da\'b5\'e3\'cd\'f9\'cf\'c2\'c3\'e6\'b4\'ab\'b5\'dd\'d2\'d1\'be\'ad\'bc\'c6\'cb\'e3\'b5\'c4\'d6\'b5\'a3\'ac\'c3\'bf\'b4\'ce
\f0 *10
\f1 \'bc\'d3\'c9\'cf\'a1\'a3
\f0 \
*/\
/**\
 * Definition for a binary tree node.\
 * struct TreeNode \{\
 *     int val;\
 *     TreeNode *left;\
 *     TreeNode *right;\
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) \{\}\
 * \};\
 */\
class Solution \{\
public:\
    int ret;\
    void count(int last, TreeNode* root)\
    \{\
        if (!root->left && !root->right) \
            ret += last * 10 + root->val;\
       \
        if (root->left)\
            count(last * 10 + root->val, root->left);\
        if (root->right)\
            count(last * 10 + root->val, root->right);    \
    \}\
    \
    int sumNumbers(TreeNode* root) \
    \{\
        ret=0;   \
        if (root)\
            count(0, root);\
        return ret;   \
    \}\
\};}