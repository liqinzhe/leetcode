{\rtf1\ansi\ansicpg936\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;}
{\*\expandedcolortbl;;\cssrgb\c20000\c20000\c20000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs28 \cf2 \expnd0\expndtw0\kerning0
/*\
\
Given an unsorted array of integers, find the length of the longest consecutive elements sequence.\
\
For example,\
Given [100, 4, 200, 1, 3, 2],\
The longest consecutive elements sequence is [1, 2, 3, 4]. Return its length: 4.\
\

\f1 \'cb\'bc\'c2\'b7\'be\'cd\'ca\'c7\'b0\'d1\'cb\'f9\'d3\'d0\'ca\'fd\'b4\'e6\'b5\'bd
\f0 map
\f1 \'d6\'d0\'a3\'ac\'b1\'e9\'c0\'fa\'ca\'fd\'d7\'e9\'c3\'bf\'d2\'bb\'b8\'f6\'d6\'b5\'a3\'ac\'c8\'bb\'ba\'f3\'cf\'f2\'d7\'f3\'d3\'d2\'d5\'d2\'a3\'ac\'d4\'d9\'b0\'d1\'c1\'bd\'b1\'df\'b5\'c4\'ce\'bb\'d6\'c3\'cf\'e0\'bc\'f5\'a3\'a1
\f0 \

\f1 \'d3\'d0\'d2\'bb\'b8\'f6\'b9\'d8\'bc\'fc\'ca\'c7\'a3\'ac\'c3\'bf\'b4\'ce\'d5\'d2\'b5\'bd\'a3\'ac\'d0\'e8\'d2\'aa\'b0\'d1
\f0 map
\f1 \'d6\'d0\'d5\'e2\'b8\'f6\'d4\'aa\'cb\'d8\'c9\'be\'b5\'f4\'a3\'ac\'d5\'e2\'d1\'f9\'b1\'dc\'c3\'e2\'d6\'ae\'ba\'f3\'d6\'d8\'b8\'b4\'b2\'e9\'d5\'d2
\f0 !*****
\f1 \'d2\'bb\'b5\'a9\'d2\'aa\'c7\'f3\'ca\'b1\'bc\'e4\'a3\'ac\'be\'cd\'cf\'eb\'b5\'bd\'bf\'d5\'bc\'e4\'bb\'bb\'ca\'b1\'bc\'e4\'a3\'ac\'d3\'c3
\f0 map
\f1 \'b2\'e9\'d5\'d2\'bf\'ec\'a3\'a1
\f0 \
\
*/\
class Solution \{\
public:\
    int longestConsecutive(vector<int>& nums) \
    \{\
        map<int,int> nummap;\
       \
        for (auto it : nums)\
            nummap[it]++;\
       \
        int ret = 0;\
        for(auto i : nums)\
        \{\
            //l\
            int _l = i - 1;\
            while(1)\
            \{\
                if (nummap.find(_l) != nummap.end()) \
                    nummap.erase(_l--);\
                else\
                    break;\
            \}\
            //r;\
            int _r = i + 1;\
            while(1)\
            \{\
                if (nummap.find(_r) != nummap.end())\
                    nummap.erase(_r++);\
                else\
                    break;\
            \}\
            ret = max(_r - _l - 1, ret);\
       \}    \
       return ret;      \
    \}\
\};}