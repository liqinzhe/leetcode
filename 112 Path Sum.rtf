{\rtf1\ansi\ansicpg936\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /*\
Given a binary tree and a sum, determine if the tree has a root-to-leaf path such that adding up all the values along the path equals the given sum.\
\
For example:\
Given the below binary tree and sum = 22,\
              5\
             / \\\
            4   8\
           /   / \\\
          11  13  4\
         /  \\      \\\
        7    2      1\
return true, as there exist a root-to-leaf path 5->4->11->2 which sum is 22.\
*/\
/**\
 * Definition for a binary tree node.\
 * struct TreeNode \{\
 *     int val;\
 *     TreeNode *left;\
 *     TreeNode *right;\
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) \{\}\
 * \};\
 */\
class Solution \{\
public:\
    bool guocheng(TreeNode* p,int sum)\
    \{\
        if (!p)\
            return 0;\
        \
        if (!p->left && !p->right && p->val == sum)\
            return 1;\
        \
        if ( guocheng(p->left, sum - p->val) || guocheng(p->right,sum - p->val) )\
            return 1;\
          \
        return 0;   \
    \}\
    \
    bool hasPathSum(TreeNode* root, int sum) \
    \{\
        if (guocheng(root, sum))\
            return 1;\
        return 0;      \
    \}\
\};}