{\rtf1\ansi\ansicpg936\cocoartf1504\cocoasubrtf820
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /*\
Given n points on a 2D plane, find the maximum number of points that lie on the same straight line.\
\
  
\f1 \'d5\'e2\'b8\'f6\'cc\'e2\'d7\'f6\'c1\'cb\'d2\'bb\'d5\'fb\'cc\'ec\'a3\'ac\'d7\'ee\'bf\'aa\'ca\'bc\'d7\'d4\'bc\'ba\'d0\'b4\'b5\'c4\'b7\'c7\'b3\'a3\'b8\'b4\'d4\'d3\'a3\'a1
\f0 \
\
way-1:  \
  1
\f1 \'a1\'a2\'b1\'e9\'c0\'fa\'c3\'bf\'d2\'bb\'b8\'f6\'b5\'e3\'a3\'ac\'d7\'f7\'ce\'aa\'bb\'f9\'d7\'bc\'b5\'e3
\f0 \
  2
\f1 \'a1\'a2\'c6\'e4\'cb\'fb\'b5\'e3\'d3\'eb\'d6\'ae\'b1\'c8\'bd\'cf\'a3\'ac\'d3\'c3
\f0 map
\f1 \'c0\'b4\'b4\'e6\'d0\'b1\'c2\'ca\'a3\'ac\'cc\'d8\'ca\'e2\'bf\'bc\'c2\'c7
\f0  
\f1 \'b4\'b9\'d6\'b1\'ba\'cd\'b8\'b4\'d6\'c6\'b5\'c4\'c7\'e9\'bf\'f6\'a1\'a3
\f0  \
    \
*/\
/**\
 * Definition for a point.\
 * struct Point \{\
 *     int x;\
 *     int y;\
 *     Point() : x(0), y(0) \{\}\
 *     Point(int a, int b) : x(a), y(b) \{\}\
 * \};\
 */\
\
 \
class Solution \{\
public:\
    int maxPoints(vector<Point>& points) \
    \{\
        if(points.size()<=2)\
            return points.size();\
     \
        int ret=2;\
       \
        for(int i=0;i<points.size();i++)\
        \{\
            int dup=0;\
            int ver=0;\
            int curcount=1;\
            map<double,int> xielv;\
           \
            for(int j=0;j<points.size();j++)\
            \{\
                if(i!=j)\
                \{\
                    double _x=points[i].x-points[j].x;\
                    double _y=points[i].y-points[j].y;\
                   \
                    if(_x==0 && _y==0)//
\f1 \'c1\'bd\'b8\'f6\'b5\'e3\'cf\'e0\'cd\'ac
\f0 \
                        dup++;\
                    else if(_x==0)//
\f1 \'b4\'b9\'d6\'b1\'c7\'e9\'bf\'f6
\f0 \
                    \{\
                        if(ver==0)\
                            ver=2;\
                        else\
                            ver++;\
                        curcount=max(curcount,ver); \
                    \}\
                    else//
\f1 \'d0\'b1\'c2\'ca\'b4\'e6\'d4\'da\'b5\'c4\'c7\'e9\'bf\'f6
\f0 \
                    \{ \
                        double xie=_y/_x;\
                        cout<<xie<<endl;\
                        if(xielv[xie]==0)\
                            xielv[xie]=2;\
                        else\
                            xielv[xie]++;\
                        curcount=max(curcount,xielv[xie]);\
                    \}\
               \}\
            \}\
            ret=max(ret,curcount+dup);\
        \}\
        return ret;  \
    \}\
\};}