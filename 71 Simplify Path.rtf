{\rtf1\ansi\ansicpg936\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww17120\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /*\
Given an absolute path for a file (Unix-style), simplify it.\
\
For example,\
path = "/home/", => "/home"\
path = "/a/./b/../../c/", => "/c"\
\

\f1 1\'a1\'a2\'d3\'c3
\f0 stack
\f1 \'a3\'a1
\f0 \
2
\f1 \'a1\'a2
\f0 path.find("/") != string::npos   
\f1 \'b4\'fa\'b1\'ed
\f0  
\f1 \'c8\'e7\'b9\'fb
\f0 path
\f1 \'c0\'ef\'c3\'e6\'c4\'dc\'d5\'d2\'b5\'bd
\f0 \'93
\f1 /
\f0 \'94\
\
\
*/\
class Solution \{\
public:\
    string simplifyPath(string path) \
    \{\
        stack<string> m;\
        vector<string> _path;\
        string ret = "/";\
        \
        getpath(_path, path);\
        \
        if (_path.size() == 0)\
            return ret;\
        \
        for (int i = 0; i < _path.size(); i++)\
        \{\
            if (_path[i] == "." || (_path[i] == ".." && m.empty()))\
                continue;\
            else if (_path[i] == ".." && !m.empty())\
                m.pop();\
            else\
                m.push(_path[i]);\
        \}\
        \
        _path.clear();\
        while (!m.empty())\
        \{\
            _path.insert(_path.begin(), m.top());\
            m.pop();\
        \}\
        \
        for (int i = 0; i < _path.size(); i++)\
            ret += _path[i] + "/";\
\
        return ret == "/" ? ret : ret.substr(0, ret.size() - 1);\
    \}\
    \
    void getpath(vector<string> &_path, string path)\
    \{\
        path = path.substr(1, path.size() - 1);\
        \
        while ( path.find("/") != string::npos )\
        \{\
            int pos = path.find("/");\
            if (pos > 0)\
                _path.push_back( path.substr(0,pos) );\
            path = path.substr(pos + 1, path.size() - pos - 1);\
        \}\
        if (path.size() > 0)\
            _path.push_back( path );\
    \}    \
\};}